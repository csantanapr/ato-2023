apiVersion: templates.gatekeeper.sh/v1
kind: ConstraintTemplate
metadata:
  name: providerconfigmismatch
  annotations:
    description: >-
      Disallows ProviderConfig name mismatch. ProviderConfig must be <NAMESPACE>-provider-config
spec:
  crd:
    spec:
      names:
        kind: ProviderConfigMismatch
  targets:
    - target: admission.k8s.gatekeeper.sh
      rego: |
        package providerconfigmismatch

        # this is necessary since there are no way to match based on glob expressions within constrains.
        default should_process = false
        should_process = true {
          re_match("^.*.aws.crossplane.io$", input.review.kind.group)
        }

        violation[{"msg": msg}] {
          should_process
          not input.review.object.metadata.labels
          msg := "label not present"
        }

        # claim namespace label must be present. this means you cannot create managed resource directly and composite resource cannot be created unless excluded by constrains.
        violation[{"msg": msg}] {
          should_process
          not input.review.object.metadata.labels["crossplane.io/claim-namespace"]
          msg := "crossplane claim ns not present"
        }

        violation[{"msg": msg}] {
          should_process
          claimNS := input.review.object.metadata.labels["crossplane.io/claim-namespace"]
          expected := sprintf("%v-provider-config", [claimNS])
          expected != input.review.object.spec.providerConfigRef.name
          msg := sprintf("provider config name must be <NAMESPACE>-provider-config. expected: %v, received %v", [expected, input.review.object.spec.providerConfigRef.name])
        }

